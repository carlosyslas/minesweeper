{"version":3,"sources":["game/board/selectors.js","game/status/selectors.js","game/board/records.js","game/board/reducer.js","game/board/actions.js","game/status/constants.js","game/board/index.js","game/status/actions.js","home/index.js","game/status/reducer.js","game/reducer.js","rootReducer.js","App.js","serviceWorker.js","index.js"],"names":["selectBoard","state","getIn","selectGameStatus","CellRecord","Record","value","covered","flagged","initialState","List","isInBoardBoundaries","board","_ref","row","col","size","get","getMineValue","cell","isCellCovered","_ref4","reducer","arguments","length","undefined","_ref7","type","payload","reduceUncoverCell","_ref2","map","set","setIn","_ref3","width","height","mines","rows","cells","push","mine","Math","floor","random","mineValue","reduceCreateNewBoard","_ref5","reduceFlagCell","_ref6","reduceUnflagCell","GAME_STATUS","MENU","Symbol","RUNNING","LOST","WON","theme","cellSize","minesCountColors","Cell","styled","div","_templateObject","props","Row","_templateObject2","Container","_templateObject3","Mine","_templateObject4","FlagContainer","_templateObject5","Flag","react_default","a","createElement","className","MinesCount","span","_templateObject6","CellContent","board_Flag","mapDispatchToProps","createNewBoard","uncoverCell","flagCell","unflagCell","setGameStatus","connect","gameStatus","onClick","r","onContextMenu","e","preventDefault","board_CellContent","home_templateObject","Inner","home_templateObject2","Home","home_Container","Link","to","status","combineReducers","rootReducer","game","store","createStore","App","es","BrowserRouter","Switch","Route","path","component","Board","exact","game_board","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mSAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,MAAM,CAAC,OAAQ,WCA5CC,EAAmB,SAAAF,GAAK,OAAIA,EAAMC,MAAM,CAAC,OAAQ,mBCEjDE,EAAaC,iBAAO,CAAEC,MAAO,EAAGC,SAAS,EAAMC,SAAS,ICO/DC,EAAe,IAAIC,OAInBC,EAAsB,SAACC,EAADC,GAAA,IAAUC,EAAVD,EAAUC,IAAKC,EAAfF,EAAeE,IAAf,OAC1BD,GAAO,GAAKC,GAAO,GAAKD,EAAMF,EAAMI,MAAQD,EAAMH,EAAMK,IAAI,GAAGD,MA6C3DE,EAAe,SAACN,EAAOE,EAAKC,GAChC,GAAID,EAAM,GAAKC,EAAM,EACnB,OAAO,EAGT,IAAMI,EAAOP,EAAMV,MAAM,CAACY,EAAKC,IAC/B,OAAII,IAtDkB,IAsDVA,EAAKb,MACR,EAGF,GAuDHc,EAAgB,SAACnB,EAADoB,GAAA,IAAUP,EAAVO,EAAUP,IAAKC,EAAfM,EAAeN,IAAf,OACpBd,EAAMC,MAAM,CAACY,EAAKC,EAAK,aAuCVO,EAfC,WAAkD,IAAjDrB,EAAiDsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzCd,EAAyCiB,EAAAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAlBI,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,QAC7C,OAAQD,GACN,ICtJwB,eDuJtB,OAvIoB,SAApBE,EAAqB5B,EAAD6B,GAAyB,IAAfhB,EAAegB,EAAfhB,IAAKC,EAAUe,EAAVf,IACvC,IAAKJ,EAAoBV,EAAO,CAAEa,MAAKC,QACrC,OAAOd,EAET,IAAMK,EAAQL,EAAMC,MAAM,CAACY,EAAKC,EAAK,UAC/BR,EAAUN,EAAMC,MAAM,CAACY,EAAKC,EAAK,YAEvC,OAAKR,IAbiB,IAiBlBD,IACFL,EAAQA,EAAM8B,IAAI,SAAAjB,GAAG,OACnBA,EAAIiB,IAAI,SAAAZ,GACN,OApBgB,IAoBZA,EAAKF,IAAI,SACJE,EAAKa,IAAI,WAAW,GAItBb,OAKblB,EAAQA,EACLgC,MAAM,CAACnB,EAAKC,EAAK,YAAY,GAC7BkB,MAAM,CAACnB,EAAKC,EAAK,YAAY,GAElB,IAAVT,GAAeC,IACjBN,EAAQ4B,EAAkB5B,EAAO,CAAEa,IAAKA,EAAM,EAAGC,IAAKA,EAAM,IAC5Dd,EAAQ4B,EAAkB5B,EAAO,CAAEa,IAAKA,EAAM,EAAGC,IAAKA,IACtDd,EAAQ4B,EAAkB5B,EAAO,CAAEa,IAAKA,EAAM,EAAGC,IAAKA,EAAM,IAC5Dd,EAAQ4B,EAAkB5B,EAAO,CAAEa,IAAKA,EAAKC,IAAKA,EAAM,IACxDd,EAAQ4B,EAAkB5B,EAAO,CAAEa,IAAKA,EAAKC,IAAKA,EAAM,IACxDd,EAAQ4B,EAAkB5B,EAAO,CAAEa,IAAKA,EAAM,EAAGC,IAAKA,EAAM,IAC5Dd,EAAQ4B,EAAkB5B,EAAO,CAAEa,IAAKA,EAAM,EAAGC,IAAKA,IACtDd,EAAQ4B,EAAkB5B,EAAO,CAAEa,IAAKA,EAAM,EAAGC,IAAKA,EAAM,KAGvDd,GA/BEA,EA+HE4B,CAAkB5B,EAAO2B,GAClC,ICzJ4B,mBD0J1B,OAjFuB,SAAAM,GAG3B,IAHyD,IAA3BC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,MACvCC,EAAO,GAEJxB,EAAM,EAAGA,EAAMsB,EAAQtB,IAAO,CAGrC,IAFA,IAAMyB,EAAQ,GAELxB,EAAM,EAAGA,EAAMoB,EAAOpB,IAC7BwB,EAAMC,KAAK,IAAIpC,EAAW,KAG5BkC,EAAKE,KAAK,IAAI9B,OAAK6B,IAKrB,IAFA,IAAI3B,EAAQ,IAAIF,OAAK4B,GAEZG,EAAO,EAAGA,EAAOJ,EAAOI,IAAQ,CAIvC,IAHA,IAAI3B,EAAM4B,KAAKC,MAAMD,KAAKE,SAAWR,GACjCrB,EAAM2B,KAAKC,MAAMD,KAAKE,SAAWT,IA/EjB,IAiFbvB,EAAMV,MAAM,CAACY,EAAKC,EAAK,WAC5BD,EAAM4B,KAAKC,MAAMD,KAAKE,SAAWR,GACjCrB,EAAM2B,KAAKC,MAAMD,KAAKE,SAAWT,GAGnCvB,EAAQA,EAAMqB,MAAM,CAACnB,EAAKC,EAAK,UAtFX,GAyFtB,IAAK,IAAID,EAAM,EAAGA,EAAMsB,EAAQtB,IAC9B,IAAK,IAAIC,EAAM,EAAGA,EAAMoB,EAAOpB,IAAO,CACpC,IAAI8B,EAAYjC,EAAMV,MAAM,CAACY,EAAKC,EAAK,WA3FrB,IA4Fd8B,IAEFA,GAAa3B,EAAaN,EAAOE,EAAM,EAAGC,EAAM,GAChD8B,GAAa3B,EAAaN,EAAOE,EAAM,EAAGC,GAC1C8B,GAAa3B,EAAaN,EAAOE,EAAM,EAAGC,EAAM,GAEhD8B,GAAa3B,EAAaN,EAAOE,EAAKC,EAAM,GAC5C8B,GAAa3B,EAAaN,EAAOE,EAAKC,EAAM,GAE5C8B,GAAa3B,EAAaN,EAAOE,EAAM,EAAGC,EAAM,GAChD8B,GAAa3B,EAAaN,EAAOE,EAAM,EAAGC,GAC1C8B,GAAa3B,EAAaN,EAAOE,EAAM,EAAGC,EAAM,GAEhDH,EAAQA,EAAMqB,MAAM,CAACnB,EAAKC,EAAK,SAAU8B,IAK/C,OAAOjC,EAiCIkC,CAAqBlB,GAC9B,ICzJqB,YD0JnB,OA7BiB,SAAC3B,EAAD8C,GAAyB,IAAfjC,EAAeiC,EAAfjC,IAAKC,EAAUgC,EAAVhC,IACpC,OACGJ,EAAoBV,EAAO,CAAEa,MAAKC,SAClCK,EAAcnB,EAAO,CAAEa,MAAKC,QAKxBd,EAAMgC,MAAM,CAACnB,EAAKC,EAAK,YAAY,GAHjCd,EAwBE+C,CAAe/C,EAAO2B,GAC/B,IC1JuB,cD2JrB,OApBmB,SAAC3B,EAADgD,GAAyB,IAAfnC,EAAemC,EAAfnC,IAAKC,EAAUkC,EAAVlC,IACtC,OACGJ,EAAoBV,EAAO,CAAEa,MAAKC,SAClCK,EAAcnB,EAAO,CAAEa,MAAKC,QAKxBd,EAAMgC,MAAM,CAACnB,EAAKC,EAAK,YAAY,GAHjCd,EAeEiD,CAAiBjD,EAAO2B,GACjC,QACE,OAAO3B,IEhKAkD,EAAc,CACzBC,KAAMC,OAAO,QACbC,QAASD,OAAO,WAChBE,KAAMF,OAAO,QACbG,IAAKH,OAAO,uoCCMd,IAAMI,EAAQ,CACZC,SAAU,GACVC,iBAAkB,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAIEC,EAAOC,IAAOC,IAAVC,IACCN,EAAMC,SACLD,EAAMC,SACF,SAAAM,GAAK,OAAKA,EAAMzD,QAAU,UAAY,QAItB,GAAjBkD,EAAMC,SACJD,EAAMC,UASjBO,EAAMJ,IAAOC,IAAVI,KAMHC,EAAYN,IAAOC,IAAVM,KAMTC,EAAOR,IAAOC,IAAVQ,IACCb,EAAMC,SAAW,EAChBD,EAAMC,SAAW,GASvBa,EAAgBV,IAAOC,IAAVU,KAIbC,EAAO,kBACXC,EAAAC,EAAAC,cAACL,EAAD,KACEG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAIXC,EAAajB,IAAOkB,KAAVC,IACL,SAAAhB,GAAK,OAAIP,EAAME,iBAAiBK,EAAM1D,MAAQ,KAGnD2E,EAAc,SAAApE,GAAiC,IAA9BP,EAA8BO,EAA9BP,MAAOC,EAAuBM,EAAvBN,QAC5B,OADmDM,EAAdL,QAE5BkE,EAAAC,EAAAC,cAACM,EAAD,MAGK,IAAV5E,EACK,KAGLC,EACK,KAGLD,EAAQ,EACHoE,EAAAC,EAAAC,cAACP,EAAD,MAGFK,EAAAC,EAAAC,cAACE,EAAD,CAAYxE,MAAOA,GAAQA,IAmE9B6E,EAAqB,CACzBC,eF9J4B,SAAAvE,GAAA,MAA+B,CAC3Dc,KAN8B,mBAO9BC,QAAS,CACPO,MAH0BtB,EAAGsB,MAI7BC,OAJ0BvB,EAAUuB,OAKpCC,MAL0BxB,EAAkBwB,SE+J9CgD,YFtJyB,SAAAvD,GAAA,MAAmB,CAC5CH,KAd0B,eAe1BC,QAAS,CACPd,IAHuBgB,EAAGhB,IAI1BC,IAJuBe,EAAQf,OEuJjCuE,SF/IsB,SAAApD,GAAA,MAAmB,CACzCP,KArBuB,YAsBvBC,QAAS,CACPd,IAHoBoB,EAAGpB,IAIvBC,IAJoBmB,EAAQnB,OEgJ9BwE,WFxIwB,SAAAlE,GAAA,MAAmB,CAC3CM,KA5ByB,cA6BzBC,QAAS,CACPd,IAHsBO,EAAGP,IAIzBC,IAJsBM,EAAQN,OEyIhCyE,cCrK2B,SAAA5D,GAAO,MAAK,CACvCD,KAH6B,kBAI7BC,aDsKa6D,cAbS,SAAAxF,GAAK,MAAK,CAChCW,MAAOZ,EAAYC,GACnByF,WAAYvF,EAAiBF,KAa7BkF,EAFaM,CAxEK,SAAA3D,GAAA,IAClBlB,EADkBkB,EAClBlB,MACA8E,EAFkB5D,EAElB4D,WACAN,EAHkBtD,EAGlBsD,eACAC,EAJkBvD,EAIlBuD,YACAC,EALkBxD,EAKlBwD,SACAC,EANkBzD,EAMlByD,WACAC,EAPkB1D,EAOlB0D,cAPkB,OASlBd,EAAAC,EAAAC,cAACT,EAAD,KACEO,EAAAC,EAAAC,cAAA,UACEe,QAAS,WACPH,EAAcrC,EAAYG,SAC1B8B,EAAe,CAAEjD,MAAO,EAAGC,OAAQ,EAAGC,MAAO,OAHjD,OAQCzB,EAAMmB,IAAI,SAACjB,EAAK8E,GAAN,OACTlB,EAAAC,EAAAC,cAACX,EAAD,KACGnD,EAAIiB,IAAI,SAACZ,EAAMJ,GAAP,OACP2D,EAAAC,EAAAC,cAAChB,EAAD,CACErD,QAASY,EAAKZ,QACdoF,QAAS,WACHD,IAAevC,EAAYG,UAI/B+B,EAAY,CAAEvE,IAAK8E,EAAG7E,SHnHZ,IGoHNH,EAAMV,MAAM,CAAC0F,EAAG7E,EAAK,WACvByE,EAAcrC,EAAYI,QAG9BsC,cAAe,SAAAC,GACbA,EAAEC,iBAEEL,IAAevC,EAAYG,UAI3BnC,EAAKX,QACP+E,EAAW,CAAEzE,IAAK8E,EAAG7E,QAErBuE,EAAS,CAAExE,IAAK8E,EAAG7E,WAIvB2D,EAAAC,EAAAC,cAACoB,EAAD,CACE1F,MAAOa,EAAKb,MACZC,QAASY,EAAKZ,QACdC,QAASW,EAAKX,kPEhJ5B,IAAM2D,EAAYN,IAAOC,IAAVmC,KAMTC,EAAQrC,IAAOC,IAAVqC,KAaIC,EATF,kBACX1B,EAAAC,EAAAC,cAACyB,EAAD,KACE3B,EAAAC,EAAAC,cAACsB,EAAD,KACExB,EAAAC,EAAAC,cAAA,4BADF,QAEOF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,GAAG,SAAT,mBCPIC,EARA,WAAsD,IAArDvG,EAAqDsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7C4B,EAAYC,KAAiCvC,EAAAU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAlBI,EAAyBd,EAAzBc,KAAMC,EAAmBf,EAAnBe,QAChD,MFJ6B,oBEIzBD,EACKC,EAGF3B,GCJMwG,6BAAgB,CAC7B7F,QACA4F,WCCaE,GAJKD,0BAAgB,CAClCE,UCKIC,GAAQC,YAAYH,IAkBXI,oLAdX,OACEpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAUH,MAAOA,IACflC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWC,IAC/B3C,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOI,OAAK,EAACH,KAAK,IAAIC,UAAWhB,IACjC1B,EAAAC,EAAAC,cAAC2C,EAAD,gBARMC,aCCEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5770fdce.chunk.js","sourcesContent":["export const selectBoard = state => state.getIn([\"game\", \"board\"]);\n","export const selectGameStatus = state => state.getIn([\"game\", \"status\"]);\n","import { Record } from \"immutable\";\n\nexport const CellRecord = Record({ value: 0, covered: true, flagged: false });\n","import { List } from \"immutable\";\nimport {\n  UNCOVER_CELL,\n  CREATE_NEW_BOARD,\n  FLAG_CELL,\n  UNFLAG_CELL\n} from \"./actions\";\nimport { CellRecord } from \"./records\";\n\nconst initialState = new List();\n\nexport const HAS_MINE = -1;\n\nconst isInBoardBoundaries = (board, { row, col }) =>\n  row >= 0 && col >= 0 && row < board.size && col < board.get(0).size;\n\n// TODO: use redux saga to reduce code complexity?\nconst reduceUncoverCell = (state, { row, col }) => {\n  if (!isInBoardBoundaries(state, { row, col })) {\n    return state;\n  }\n  const value = state.getIn([row, col, \"value\"]);\n  const covered = state.getIn([row, col, \"covered\"]);\n\n  if (!covered) {\n    return state;\n  }\n\n  if (value === HAS_MINE) {\n    state = state.map(row =>\n      row.map(cell => {\n        if (cell.get(\"value\") === HAS_MINE) {\n          return cell.set(\"covered\", false);\n          // TODO: unflag this cell as well.\n        }\n\n        return cell;\n      })\n    );\n  }\n\n  state = state\n    .setIn([row, col, \"covered\"], false)\n    .setIn([row, col, \"flagged\"], false);\n\n  if (value === 0 && covered) {\n    state = reduceUncoverCell(state, { row: row - 1, col: col - 1 });\n    state = reduceUncoverCell(state, { row: row - 1, col: col });\n    state = reduceUncoverCell(state, { row: row - 1, col: col + 1 });\n    state = reduceUncoverCell(state, { row: row, col: col - 1 });\n    state = reduceUncoverCell(state, { row: row, col: col + 1 });\n    state = reduceUncoverCell(state, { row: row + 1, col: col - 1 });\n    state = reduceUncoverCell(state, { row: row + 1, col: col });\n    state = reduceUncoverCell(state, { row: row + 1, col: col + 1 });\n  }\n\n  return state;\n};\n\nconst getMineValue = (board, row, col) => {\n  if (row < 0 || col < 0) {\n    return 0;\n  }\n\n  const cell = board.getIn([row, col]);\n  if (cell && cell.value === HAS_MINE) {\n    return 1;\n  }\n\n  return 0;\n};\n\n// TODO: add more tests for this function\nconst reduceCreateNewBoard = ({ width, height, mines }) => {\n  const rows = [];\n\n  for (let row = 0; row < height; row++) {\n    const cells = [];\n\n    for (let col = 0; col < width; col++) {\n      cells.push(new CellRecord({}));\n    }\n\n    rows.push(new List(cells));\n  }\n\n  let board = new List(rows);\n\n  for (let mine = 0; mine < mines; mine++) {\n    let row = Math.floor(Math.random() * height);\n    let col = Math.floor(Math.random() * width);\n\n    while (board.getIn([row, col, \"value\"]) === HAS_MINE) {\n      row = Math.floor(Math.random() * height);\n      col = Math.floor(Math.random() * width);\n    }\n\n    board = board.setIn([row, col, \"value\"], HAS_MINE);\n  }\n\n  for (let row = 0; row < height; row++) {\n    for (let col = 0; col < width; col++) {\n      let mineValue = board.getIn([row, col, \"value\"]);\n      if (mineValue !== HAS_MINE) {\n        // TODO: extract this logic\n        mineValue += getMineValue(board, row - 1, col - 1);\n        mineValue += getMineValue(board, row - 1, col);\n        mineValue += getMineValue(board, row - 1, col + 1);\n\n        mineValue += getMineValue(board, row, col - 1);\n        mineValue += getMineValue(board, row, col + 1);\n\n        mineValue += getMineValue(board, row + 1, col - 1);\n        mineValue += getMineValue(board, row + 1, col);\n        mineValue += getMineValue(board, row + 1, col + 1);\n\n        board = board.setIn([row, col, \"value\"], mineValue);\n      }\n    }\n  }\n\n  return board;\n};\n\nconst isCellCovered = (state, { row, col }) =>\n  state.getIn([row, col, \"covered\"]);\n\nconst reduceFlagCell = (state, { row, col }) => {\n  if (\n    !isInBoardBoundaries(state, { row, col }) ||\n    !isCellCovered(state, { row, col })\n  ) {\n    return state;\n  }\n\n  return state.setIn([row, col, \"flagged\"], true);\n};\n\nconst reduceUnflagCell = (state, { row, col }) => {\n  if (\n    !isInBoardBoundaries(state, { row, col }) ||\n    !isCellCovered(state, { row, col })\n  ) {\n    return state;\n  }\n\n  return state.setIn([row, col, \"flagged\"], false);\n};\n\nconst reducer = (state = initialState, { type, payload } = {}) => {\n  switch (type) {\n    case UNCOVER_CELL:\n      return reduceUncoverCell(state, payload);\n    case CREATE_NEW_BOARD:\n      return reduceCreateNewBoard(payload);\n    case FLAG_CELL:\n      return reduceFlagCell(state, payload);\n    case UNFLAG_CELL:\n      return reduceUnflagCell(state, payload);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const CREATE_NEW_BOARD = \"CREATE_NEW_BOARD\";\nexport const UNCOVER_CELL = \"UNCOVER_CELL\";\nexport const FLAG_CELL = \"FLAG_CELL\";\nexport const UNFLAG_CELL = \"UNFLAG_CELL\";\n\nexport const createNewBoard = ({ width, height, mines }) => ({\n  type: CREATE_NEW_BOARD,\n  payload: {\n    width,\n    height,\n    mines\n  }\n});\n\nexport const uncoverCell = ({ row, col }) => ({\n  type: UNCOVER_CELL,\n  payload: {\n    row,\n    col\n  }\n});\n\nexport const flagCell = ({ row, col }) => ({\n  type: FLAG_CELL,\n  payload: {\n    row,\n    col\n  }\n});\n\nexport const unflagCell = ({ row, col }) => ({\n  type: UNFLAG_CELL,\n  payload: {\n    row,\n    col\n  }\n});\n","export const GAME_STATUS = {\n  MENU: Symbol(\"menu\"),\n  RUNNING: Symbol(\"running\"),\n  LOST: Symbol(\"lost\"),\n  WON: Symbol(\"won\")\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { selectBoard } from \"./selectors\";\nimport { createNewBoard, uncoverCell, flagCell, unflagCell } from \"./actions\";\nimport { selectGameStatus } from \"../status/selectors\";\nimport { HAS_MINE } from \"./reducer\";\nimport { setGameStatus } from \"../status/actions\";\nimport { GAME_STATUS } from \"../status/constants\";\n\nconst theme = {\n  cellSize: 30,\n  minesCountColors: [\n    \"#00C9A7\",\n    \"#008F7A\",\n    \"#0089BA\",\n    \"#2C73D2\",\n    \"#845EC2\",\n    \"#D65DB1\",\n    \"#FF6F91\",\n    \"#FF9671\"\n  ]\n};\n\nconst Cell = styled.div`\n  width: ${theme.cellSize}px;\n  height: ${theme.cellSize}px;\n  background: ${props => (props.covered ? \"#6cb7ff\" : \"#fff\")};\n  border: 2px solid #333;\n  border-radius: 4px;\n  text-align: center;\n  font-size: ${theme.cellSize * 0.6}px;\n  line-height: ${theme.cellSize}px;\n  transition: 0.3s;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.15) inset;\n  cursor: pointer;\n  :hover {\n    filter: brightness(1.2);\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  max-width: 960px;\n  margin: 30px auto;\n  text-align: center;\n`;\n\nconst Mine = styled.div`\n  width: ${theme.cellSize / 2}px;\n  height: ${theme.cellSize / 2}px;\n  border-radius: 50%;\n  background: #ff7500;\n  margin: 0 auto;\n  display: inline-block;\n  vertical-align: middle;\n  box-shadow: 0px 0px 5px 1px #ff3f00, 0px 0px 3px 0px #fffc00 inset;\n`;\n\nconst FlagContainer = styled.div`\n  font-size: 12px;\n  color: red;\n`;\nconst Flag = () => (\n  <FlagContainer>\n    <i className=\"fas fa-flag\" />\n  </FlagContainer>\n);\n\nconst MinesCount = styled.span`\n  color: ${props => theme.minesCountColors[props.value - 1]};\n`;\n\nconst CellContent = ({ value, covered, flagged }) => {\n  if (flagged) {\n    return <Flag />;\n  }\n\n  if (value === 0) {\n    return null;\n  }\n\n  if (covered) {\n    return null;\n  }\n\n  if (value < 0) {\n    return <Mine />;\n  }\n\n  return <MinesCount value={value}>{value}</MinesCount>;\n};\n\nconst BoardScreen = ({\n  board,\n  gameStatus,\n  createNewBoard,\n  uncoverCell,\n  flagCell,\n  unflagCell,\n  setGameStatus\n}) => (\n  <Container>\n    <button\n      onClick={() => {\n        setGameStatus(GAME_STATUS.RUNNING);\n        createNewBoard({ width: 9, height: 9, mines: 10 });\n      }}\n    >\n      New\n    </button>\n    {board.map((row, r) => (\n      <Row>\n        {row.map((cell, col) => (\n          <Cell\n            covered={cell.covered}\n            onClick={() => {\n              if (gameStatus !== GAME_STATUS.RUNNING) {\n                return;\n              }\n\n              uncoverCell({ row: r, col });\n              if (board.getIn([r, col, \"value\"]) === HAS_MINE) {\n                setGameStatus(GAME_STATUS.LOST);\n              }\n            }}\n            onContextMenu={e => {\n              e.preventDefault();\n\n              if (gameStatus !== GAME_STATUS.RUNNING) {\n                return;\n              }\n\n              if (cell.flagged) {\n                unflagCell({ row: r, col });\n              } else {\n                flagCell({ row: r, col });\n              }\n            }}\n          >\n            <CellContent\n              value={cell.value}\n              covered={cell.covered}\n              flagged={cell.flagged}\n            />\n          </Cell>\n        ))}\n      </Row>\n    ))}\n  </Container>\n);\n\nconst mapStateToProps = state => ({\n  board: selectBoard(state),\n  gameStatus: selectGameStatus(state)\n});\n\nconst mapDispatchToProps = {\n  createNewBoard,\n  uncoverCell,\n  flagCell,\n  unflagCell,\n  setGameStatus\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoardScreen);\n","export const SET_GAME_STATUS = \"SET_GAME_STATUS\";\n\nexport const setGameStatus = payload => ({\n  type: SET_GAME_STATUS,\n  payload\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  color: #fff;\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\nconst Inner = styled.div`\n  margin: 30px;\n`;\n\nconst Home = () => (\n  <Container>\n    <Inner>\n      <h1>Start new game</h1>\n      Home <Link to=\"/game\">Game</Link>\n    </Inner>\n  </Container>\n);\n\nexport default Home;\n","import { SET_GAME_STATUS } from \"./actions\";\nimport { GAME_STATUS } from \"./constants\";\n\nconst status = (state = GAME_STATUS.MENU, { type, payload } = {}) => {\n  if (type === SET_GAME_STATUS) {\n    return payload;\n  }\n\n  return state;\n};\n\nexport default status;\n","import { combineReducers } from \"redux-immutable\";\nimport board from \"./board/reducer\";\nimport status from \"./status/reducer\";\n\nexport default combineReducers({\n  board,\n  status\n});\n","import { combineReducers } from \"redux-immutable\";\nimport game from \"./game/reducer\";\n\nconst rootReducer = combineReducers({\n  game\n});\n\nexport default rootReducer;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { Switch, Route } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Board from \"./game/board\";\nimport Home from \"./home\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(rootReducer);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/game\" component={Board} />\n            <Route exact path=\"/\" component={Home} />\n            <Board />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}