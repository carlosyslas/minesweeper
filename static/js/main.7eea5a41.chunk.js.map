{"version":3,"sources":["game/board/actions.js","game/board/records.js","game/board/reducer.js","game/board/selectors.js","game/status/selectors.js","game/status/actions.js","game/status/constants.js","theme.js","game/board/index.js","game/GameStatus.js","game/Game.js","home/index.js","game/status/reducer.js","game/reducer.js","rootReducer.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["createNewBoard","_ref","type","payload","width","height","mines","CellRecord","Record","value","covered","flagged","initialState","List","HAS_MINE","isInBoardBoundaries","board","row","col","size","get","getMineValue","cell","getIn","isCellCovered","state","_ref4","reducer","arguments","length","undefined","_ref7","reduceUncoverCell","_ref2","map","set","setIn","_ref3","rows","cells","push","mine","Math","floor","random","mineValue","reduceCreateNewBoard","_ref5","reduceFlagCell","_ref6","reduceUnflagCell","selectBoard","selectCoveredCellsCount","flatten","count","selectBoardWidth","selectGameStatus","setGameStatus","GAME_STATUS","MENU","RUNNING","LOST","WON","theme","bodyBackground","whiteColor","primaryColor","cellSize","minesCountColors","Cell","styled","div","_templateObject","props","Row","_templateObject2","Mine","_templateObject3","FlagContainer","_templateObject4","Flag","react_default","a","createElement","className","MinesCount","span","_templateObject5","CellContent","board_Flag","Container","_templateObject6","enabled","BoardScreen","handleCellClick","_this$props","_this","gameStatus","uncoverCell","handleCellRightClick","e","_this$props2","unflagCell","flagCell","preventDefault","_this$props3","this","coveredCellsCount","_this2","_this$props4","windowWidth","boardWidth","min","r","onClick","onContextMenu","board_CellContent","Component","mapDispatchToProps","connect","window","innerWidth","GameStatus_templateObject","color","GameStatus","text","GameStatus_Container","Redirect","to","game_board","game_GameStatus","home_templateObject","Title","h2","home_templateObject2","Button","button","home_templateObject3","Home","createNewGame","home_Container","fa","status","combineReducers","rootReducer","game","NavBar_templateObject","NavBar_Container","NavLink","exact","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","basename","process","src_NavBar","Switch","Route","path","component","Game","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7eea5a41.chunk.js","sourcesContent":["export const CREATE_NEW_BOARD = \"CREATE_NEW_BOARD\";\nexport const UNCOVER_CELL = \"UNCOVER_CELL\";\nexport const FLAG_CELL = \"FLAG_CELL\";\nexport const UNFLAG_CELL = \"UNFLAG_CELL\";\n\nexport const createNewBoard = ({ width, height, mines }) => ({\n  type: CREATE_NEW_BOARD,\n  payload: {\n    width,\n    height,\n    mines\n  }\n});\n\nexport const uncoverCell = ({ row, col }) => ({\n  type: UNCOVER_CELL,\n  payload: {\n    row,\n    col\n  }\n});\n\nexport const flagCell = ({ row, col }) => ({\n  type: FLAG_CELL,\n  payload: {\n    row,\n    col\n  }\n});\n\nexport const unflagCell = ({ row, col }) => ({\n  type: UNFLAG_CELL,\n  payload: {\n    row,\n    col\n  }\n});\n","import { Record } from \"immutable\";\n\nexport const CellRecord = Record({ value: 0, covered: true, flagged: false });\n","import { List } from \"immutable\";\nimport {\n  UNCOVER_CELL,\n  CREATE_NEW_BOARD,\n  FLAG_CELL,\n  UNFLAG_CELL\n} from \"./actions\";\nimport { CellRecord } from \"./records\";\n\nconst initialState = new List();\n\nexport const HAS_MINE = -1;\n\nconst isInBoardBoundaries = (board, { row, col }) =>\n  row >= 0 && col >= 0 && row < board.size && col < board.get(0).size;\n\n// TODO: use redux saga to reduce code complexity?\nconst reduceUncoverCell = (state, { row, col }) => {\n  if (!isInBoardBoundaries(state, { row, col })) {\n    return state;\n  }\n  const value = state.getIn([row, col, \"value\"]);\n  const covered = state.getIn([row, col, \"covered\"]);\n\n  if (!covered) {\n    return state;\n  }\n\n  if (value === HAS_MINE) {\n    state = state.map(row =>\n      row.map(cell => {\n        if (cell.get(\"value\") === HAS_MINE) {\n          return cell.set(\"covered\", false);\n          // TODO: unflag this cell as well.\n        }\n\n        return cell;\n      })\n    );\n  }\n\n  state = state\n    .setIn([row, col, \"covered\"], false)\n    .setIn([row, col, \"flagged\"], false);\n\n  if (value === 0 && covered) {\n    state = reduceUncoverCell(state, { row: row - 1, col: col - 1 });\n    state = reduceUncoverCell(state, { row: row - 1, col: col });\n    state = reduceUncoverCell(state, { row: row - 1, col: col + 1 });\n    state = reduceUncoverCell(state, { row: row, col: col - 1 });\n    state = reduceUncoverCell(state, { row: row, col: col + 1 });\n    state = reduceUncoverCell(state, { row: row + 1, col: col - 1 });\n    state = reduceUncoverCell(state, { row: row + 1, col: col });\n    state = reduceUncoverCell(state, { row: row + 1, col: col + 1 });\n  }\n\n  return state;\n};\n\nconst getMineValue = (board, row, col) => {\n  if (row < 0 || col < 0) {\n    return 0;\n  }\n\n  const cell = board.getIn([row, col]);\n  if (cell && cell.value === HAS_MINE) {\n    return 1;\n  }\n\n  return 0;\n};\n\n// TODO: add more tests for this function\nconst reduceCreateNewBoard = ({ width, height, mines }) => {\n  const rows = [];\n\n  for (let row = 0; row < height; row++) {\n    const cells = [];\n\n    for (let col = 0; col < width; col++) {\n      cells.push(new CellRecord({}));\n    }\n\n    rows.push(new List(cells));\n  }\n\n  let board = new List(rows);\n\n  for (let mine = 0; mine < mines; mine++) {\n    let row = Math.floor(Math.random() * height);\n    let col = Math.floor(Math.random() * width);\n\n    while (board.getIn([row, col, \"value\"]) === HAS_MINE) {\n      row = Math.floor(Math.random() * height);\n      col = Math.floor(Math.random() * width);\n    }\n\n    board = board.setIn([row, col, \"value\"], HAS_MINE);\n  }\n\n  for (let row = 0; row < height; row++) {\n    for (let col = 0; col < width; col++) {\n      let mineValue = board.getIn([row, col, \"value\"]);\n      if (mineValue !== HAS_MINE) {\n        // TODO: extract this logic\n        mineValue += getMineValue(board, row - 1, col - 1);\n        mineValue += getMineValue(board, row - 1, col);\n        mineValue += getMineValue(board, row - 1, col + 1);\n\n        mineValue += getMineValue(board, row, col - 1);\n        mineValue += getMineValue(board, row, col + 1);\n\n        mineValue += getMineValue(board, row + 1, col - 1);\n        mineValue += getMineValue(board, row + 1, col);\n        mineValue += getMineValue(board, row + 1, col + 1);\n\n        board = board.setIn([row, col, \"value\"], mineValue);\n      }\n    }\n  }\n\n  return board;\n};\n\nconst isCellCovered = (state, { row, col }) =>\n  state.getIn([row, col, \"covered\"]);\n\nconst reduceFlagCell = (state, { row, col }) => {\n  if (\n    !isInBoardBoundaries(state, { row, col }) ||\n    !isCellCovered(state, { row, col })\n  ) {\n    return state;\n  }\n\n  return state.setIn([row, col, \"flagged\"], true);\n};\n\nconst reduceUnflagCell = (state, { row, col }) => {\n  if (\n    !isInBoardBoundaries(state, { row, col }) ||\n    !isCellCovered(state, { row, col })\n  ) {\n    return state;\n  }\n\n  return state.setIn([row, col, \"flagged\"], false);\n};\n\nconst reducer = (state = initialState, { type, payload } = {}) => {\n  switch (type) {\n    case UNCOVER_CELL:\n      return reduceUncoverCell(state, payload);\n    case CREATE_NEW_BOARD:\n      return reduceCreateNewBoard(payload);\n    case FLAG_CELL:\n      return reduceFlagCell(state, payload);\n    case UNFLAG_CELL:\n      return reduceUnflagCell(state, payload);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { List } from \"immutable\";\nimport { HAS_MINE } from \"./reducer\";\n\nexport const selectBoard = state => state.getIn([\"game\", \"board\"]);\n\nexport const selectCoveredCellsCount = state =>\n  selectBoard(state)\n    .flatten()\n    .count(cell => cell.get(\"covered\") && cell.get(\"value\") !== HAS_MINE);\n\nexport const selectBoardWidth = state =>\n  state.getIn([\"game\", \"board\", 0], new List()).size;\n","export const selectGameStatus = state => state.getIn([\"game\", \"status\"]);\n","export const SET_GAME_STATUS = \"SET_GAME_STATUS\";\n\nexport const setGameStatus = payload => ({\n  type: SET_GAME_STATUS,\n  payload\n});\n","export const GAME_STATUS = {\n  MENU: \"menu\",\n  RUNNING: \"running\",\n  LOST: \"lost\",\n  WON: \"won\"\n};\n","export default {\n  bodyBackground: \"#333\",\n  whiteColor: \"#fff\",\n  primaryColor: \"#6cb7ff\",\n  cellSize: 30,\n  minesCountColors: [\n    \"#00C9A7\",\n    \"#008F7A\",\n    \"#0089BA\",\n    \"#2C73D2\",\n    \"#845EC2\",\n    \"#D65DB1\",\n    \"#FF6F91\",\n    \"#FF9671\"\n  ]\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport {\n  selectBoard,\n  selectCoveredCellsCount,\n  selectBoardWidth\n} from \"./selectors\";\nimport { createNewBoard, uncoverCell, flagCell, unflagCell } from \"./actions\";\nimport { selectGameStatus } from \"../status/selectors\";\nimport { HAS_MINE } from \"./reducer\";\nimport { setGameStatus } from \"../status/actions\";\nimport { GAME_STATUS } from \"../status/constants\";\nimport theme from \"../../theme\";\n\nconst Cell = styled.div`\n  box-sizing: border-box;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  background: ${props =>\n    props.covered ? theme.primaryColor : theme.whiteColor};\n  border: 2px solid ${theme.bodyBackground};\n  border-radius: 4px;\n  text-align: center;\n  font-size: ${props => props.size * 0.6}px;\n  line-height: ${props => props.size}px;\n  transition: 0.3s;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.15) inset;\n  cursor: pointer;\n  :hover {\n    filter: brightness(1.2);\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst Mine = styled.div`\n  width: ${props => props.size / 2}px;\n  height: ${props => props.size / 2}px;\n  border-radius: 50%;\n  background: #ff7500;\n  margin: 0 auto;\n  display: inline-block;\n  vertical-align: middle;\n  box-shadow: 0px 0px 5px 1px #ff3f00, 0px 0px 3px 0px #fffc00 inset;\n`;\n\nconst FlagContainer = styled.div`\n  font-size: 12px;\n  color: red;\n`;\nconst Flag = () => (\n  <FlagContainer>\n    <i className=\"fas fa-flag\" />\n  </FlagContainer>\n);\n\nconst MinesCount = styled.span`\n  color: ${props => theme.minesCountColors[props.value - 1]};\n`;\n\nconst CellContent = ({ value, covered, flagged, size }) => {\n  if (flagged) {\n    return <Flag />;\n  }\n\n  if (value === 0) {\n    return null;\n  }\n\n  if (covered) {\n    return null;\n  }\n\n  if (value < 0) {\n    return <Mine size={size} />;\n  }\n\n  return <MinesCount value={value}>{value}</MinesCount>;\n};\n\nconst Container = styled.div`\n  filter: ${props => (props.enabled ? \"\" : \"brightness(0.9) blur(1px)\")};\n`;\n\nclass BoardScreen extends Component {\n  componentDidUpdate() {\n    const { setGameStatus, coveredCellsCount } = this.props;\n\n    if (coveredCellsCount === 0) {\n      setGameStatus(GAME_STATUS.WON);\n    }\n  }\n\n  handleCellClick = ({ row, col }) => {\n    const { board, gameStatus, setGameStatus, uncoverCell } = this.props;\n\n    if (gameStatus !== GAME_STATUS.RUNNING) {\n      return;\n    }\n\n    uncoverCell({ row, col });\n    if (board.getIn([row, col, \"value\"]) === HAS_MINE) {\n      setGameStatus(GAME_STATUS.LOST);\n    }\n  };\n\n  handleCellRightClick = (e, { row, col }) => {\n    const { board, gameStatus, unflagCell, flagCell } = this.props;\n    e.preventDefault();\n\n    if (gameStatus !== GAME_STATUS.RUNNING) {\n      return;\n    }\n\n    if (board.getIn([row, col, \"flagged\"])) {\n      unflagCell({ row, col });\n    } else {\n      flagCell({ row, col });\n    }\n  };\n\n  render() {\n    const { board, gameStatus, windowWidth, boardWidth } = this.props;\n\n    const cellSize = Math.min(theme.cellSize, windowWidth / boardWidth);\n\n    return (\n      <Container enabled={gameStatus === GAME_STATUS.RUNNING}>\n        {board.map((row, r) => (\n          <Row>\n            {row.map((cell, col) => (\n              <Cell\n                covered={cell.covered}\n                onClick={() => this.handleCellClick({ row: r, col })}\n                onContextMenu={e =>\n                  this.handleCellRightClick(e, { row: r, col })\n                }\n                size={cellSize}\n              >\n                <CellContent\n                  value={cell.value}\n                  covered={cell.covered}\n                  flagged={cell.flagged}\n                  size={cellSize}\n                />\n              </Cell>\n            ))}\n          </Row>\n        ))}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  board: selectBoard(state),\n  gameStatus: selectGameStatus(state),\n  coveredCellsCount: selectCoveredCellsCount(state),\n  windowWidth: window.innerWidth,\n  boardWidth: selectBoardWidth(state)\n});\n\nconst mapDispatchToProps = {\n  createNewBoard,\n  uncoverCell,\n  flagCell,\n  unflagCell,\n  setGameStatus\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoardScreen);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { GAME_STATUS } from \"./status/constants\";\nimport theme from \"../theme\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 150px;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 30px;\n  color: ${props => props.color};\n  text-shadow: -2px -2px 0 ${theme.whiteColor}, 0px -2px 0 ${theme.whiteColor},\n    2px -2px 0 ${theme.whiteColor}, -2px 2px 0 ${theme.whiteColor},\n    0px 2px ${theme.whiteColor}, 2px 2px 0 ${theme.whiteColor},\n    0px 0px 60px ${theme.whiteColor}, 0px 0px 40px ${theme.whiteColor},\n    0px 0px 20px ${theme.whiteColor};\n\n  @media (max-width: 400px) {\n    font-size: 25px;\n  }\n`;\n\nconst LOST_COLOR = \"#c33300\";\nconst WON_COLOR = \"#0067cb\";\n\nconst GameStatus = ({ gameStatus }) => {\n  if (gameStatus === GAME_STATUS.RUNNING || gameStatus === GAME_STATUS.MENU) {\n    return null;\n  }\n\n  const color = gameStatus === GAME_STATUS.LOST ? LOST_COLOR : WON_COLOR;\n  const text =\n    gameStatus === GAME_STATUS.LOST ? \"Game Over\" : \"Congratulations!\";\n\n  return (\n    <Container color={color}>\n      <h2>{text}</h2>\n    </Container>\n  );\n};\n\nexport default GameStatus;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport Board from \"./board\";\nimport { selectGameStatus } from \"./status/selectors\";\nimport GameStatus from \"./GameStatus\";\nimport { GAME_STATUS } from \"./status/constants\";\n\nconst Game = ({ gameStatus }) => {\n  if (gameStatus === GAME_STATUS.MENU) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <Board />\n      <GameStatus gameStatus={gameStatus} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  gameStatus: selectGameStatus(state)\n});\n\nexport default connect(mapStateToProps)(Game);\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { FaPoop, FaFire, FaSkullCrossbones } from \"react-icons/fa\";\nimport theme from \"../theme\";\nimport { createNewBoard } from \"../game/board/actions\";\nimport { setGameStatus } from \"../game/status/actions\";\nimport { GAME_STATUS } from \"../game/status/constants\";\nimport { selectGameStatus } from \"../game/status/selectors\";\n\nconst Container = styled.div`\n  color: #fff;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Title = styled.h2`\n  margin: 0 0 50px;\n  font-weight: 300;\n`;\n\nconst Button = styled.button`\n  text-align: left;\n  border: 0;\n  padding: 10px 30px;\n  font-size: 20px;\n  background: ${props => props.color};\n  color: ${theme.whiteColor};\n  display: block;\n  width: 100%;\n  margin-top: 10px;\n  cursor: pointer;\n\n  svg {\n    margin-right: 15px;\n  }\n`;\n\nclass Home extends Component {\n  createNewGame = ({ width, height, mines }) => {\n    const { createNewBoard, setGameStatus } = this.props;\n\n    createNewBoard({ width, height, mines });\n    setGameStatus(GAME_STATUS.RUNNING);\n  };\n\n  render() {\n    const { gameStatus } = this.props;\n    if (gameStatus === GAME_STATUS.RUNNING) {\n      return <Redirect to=\"/game\" />;\n    }\n\n    return (\n      <Container>\n        <div>\n          <Title>Minesweeper</Title>\n          <Button\n            color=\"#9fd356\"\n            onClick={() =>\n              this.createNewGame({ width: 9, height: 9, mines: 10 })\n            }\n          >\n            <FaPoop />\n            Easy 9x9\n          </Button>\n          <Button\n            color=\"#d8bd00\"\n            onClick={() =>\n              this.createNewGame({ width: 16, height: 16, mines: 26 })\n            }\n          >\n            <FaFire />\n            Medium 16x16\n          </Button>\n          <Button\n            color=\"#e15554\"\n            onClick={() =>\n              this.createNewGame({ width: 30, height: 16, mines: 50 })\n            }\n          >\n            <FaSkullCrossbones />\n            Expert 30x16\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  gameStatus: selectGameStatus(state)\n});\n\nconst mapDispatchToProps = {\n  createNewBoard,\n  setGameStatus\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import { SET_GAME_STATUS } from \"./actions\";\nimport { GAME_STATUS } from \"./constants\";\n\nconst status = (state = GAME_STATUS.MENU, { type, payload } = {}) => {\n  if (type === SET_GAME_STATUS) {\n    return payload;\n  }\n\n  return state;\n};\n\nexport default status;\n","import { combineReducers } from \"redux-immutable\";\nimport board from \"./board/reducer\";\nimport status from \"./status/reducer\";\n\nexport default combineReducers({\n  board,\n  status\n});\n","import { combineReducers } from \"redux-immutable\";\nimport game from \"./game/reducer\";\n\nconst rootReducer = combineReducers({\n  game\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport theme from \"./theme\";\nimport { setGameStatus } from \"./game/status/actions\";\nimport { GAME_STATUS } from \"./game/status/constants\";\nimport { selectGameStatus } from \"./game/status/selectors\";\n\nconst Container = styled.div`\n  padding: 15px;\n  a {\n    padding: 3px;\n    width: 32px;\n    height: 32px;\n    box-sizing: border-box;\n    text-align: center;\n    display: inline-block;\n    border: 1px solid;\n    border-radius: 50%;\n    transition: 0.3s;\n    :hover {\n      background: ${theme.primaryColor};\n      border-color: transparent;\n      color: ${theme.bodyBackground};\n    }\n  }\n  svg {\n    display: inline-block;\n    vertical-align: middle;\n  }\n`;\n\nconst NavBar = ({ gameStatus, setGameStatus }) => (\n  <Container>\n    {gameStatus !== GAME_STATUS.MENU && (\n      <NavLink exact to=\"/\" onClick={() => setGameStatus(GAME_STATUS.MENU)}>\n        <FaArrowLeft />\n      </NavLink>\n    )}\n  </Container>\n);\n\nconst mapStateToProps = state => ({\n  gameStatus: selectGameStatus(state)\n});\n\nconst mapDispatchToProps = {\n  setGameStatus\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavBar);\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { Switch, Route } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Game from \"./game/Game\";\nimport Home from \"./home\";\nimport rootReducer from \"./rootReducer\";\nimport NavBar from \"./NavBar\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <div>\n            <NavBar />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/game\" component={Game} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}